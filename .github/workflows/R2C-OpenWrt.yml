name: R2C-OpenWrt

on:
#  schedule:
#    - cron: 5 6 * * 0
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        cpu_name=$(cat /proc/cpuinfo | grep "model name" | head -n 1 | awk -F: '{print $2}' | sed 's/^[ \t]*//')
        if [[ ! "$cpu_name" =~ "8370C" ]]; then
        echo "CPU不为8370C，性能不足，停止执行命令"
        exit 1
        else
        echo "CPU为8370C，继续执行命令"
        ulimit -a
        fi
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 100
        root-reserve-mb: 2048
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/YAOF
        cp -r ./SCRIPTS/R2S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
    - name: Prepare Package
      run: |
        cd openwrt
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_target_only.sh
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../SEED/R2C/config.seed .config
        #echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config
        make defconfig
    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}-" >>$GITHUB_ENV
        echo "latest_release=v21.02.7" >>$GITHUB_ENV
    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt
    - name: Make Download
      run: |
        df -h
        cd openwrt
        make download -j50
    - name: Compile Openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        df -h
        cd openwrt
        make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
        echo $?
    - name: If Error
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat openwrt/.config
        echo '================================================================'
        cd openwrt && make -j1 V=s
    - name: Print Disk Space After
      run: df -h
    - name: Organize files
      id: organize
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        mv openwrt/bin/targets/rockchip/armv8/*sysupgrade.img* ./artifact/
        cd ./artifact/
        ls -Ahl
        gzip -d *.gz && exit 0
        gzip --best *.img
        ls -Ahl
        sha256sum openwrt*r2c* | tee R2C-sk07-$(date +%Y-%m-%d)-${{ env.latest_release }}.sha256sum
        zip R2C-sk07-$(date +%Y-%m-%d)-${{ env.latest_release }}-ext4.zip *r2c*ext4*
        zip R2C-sk07-$(date +%Y-%m-%d)-${{ env.latest_release }}-sfs.zip *r2c*squashfs*
        ls -Ahl
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWRT_${{ env.latest_release }}
        path: ./artifact/

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@main
      with:
        name: OpenWRT-${{ env.latest_release }}
        allowUpdates: true
        prerelease: false
        tag: ${{ env.latest_release }}
        commit: 21.02-immortalwrt
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./artifact/*.zip
